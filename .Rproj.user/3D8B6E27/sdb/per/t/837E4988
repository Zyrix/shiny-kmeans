{
    "contents" : "# main_k_means.R\n# performs k-means clustering\n\nlibrary(ggplot2)\nlibrary(kernlab)\nlibrary(clue)\n\n# purity and NMI functions ####\n\nClusterPurity <- function(clusters, classes) {\n    n <- apply(table(classes, clusters), 2, max)\n    sum(n)/length(clusters)\n}\n\nClusterNMI <- function(clusters, classes) {\n    t <- table(clusters,classes)\n    N=length(clusters)\n    pij=t/N  # joint probability\n    pc <- as.matrix(rowSums(t))/N       # cluster probability\n    pt <- t(as.matrix(colSums(t)))/N    # class probability\n    I_CT <- sum(pij*log(pij/(pc%*%pt))) # mutual information\n    \n    H_C <- -sum(pc*log(pc))  # entropy of clustering\n    H_T <- -sum(pt*log(pt))  # entropy of partitionning\n    \n    NMI <- I_CT/sqrt(H_C*H_T)  # normalized mutual information\n}\n\n# load the data ####\n\n    data   <- read.table(\"data/self_test.data\", skip=1, col.names = c(\"x\",\"y\")) \n    ground <- read.table(\"data/self_test.ground\", skip=1, col.names = \"cluster\") \n\n# k-means clustering ####\n\n    data(iris)\n    data <- iris[,1:2]\n    K <- 2\n    centers <- data[1:K,]\n\n    Kclust <- kmeans(data ,data.matrix(centers), iter.max = 100)\n\n    result <- data.frame(data, cluster=as.factor(Kclust$cluster))\n    ggplot(data=result, aes(x=x, y=y, color=cluster)) +\n        geom_point(size=3) + \n        geom_point(data=as.data.frame(Kclust$centers),\n                   aes(x=x, y=y, color='Center'), pch=17, size=7)+\n    ggtitle(\"Clustering result\") + xlab(input$var1) + ylab(input$var2)\n\n    res_Purity <- ClusterPurity(result$cluster, ground$cluster) \n    res_NMI    <- ClusterNMI(result$cluster, ground$cluster) \n\n    cat(\"SSE = \",SSE,\"\\nPurity = \",res_Purity,\"\\nNMI = \",res_NMI)\n\n# Expected result for kmeans :\n    # of iterations: 11\n    # SSE =  24189.053923\n    # Purity = 0.666666666667\n    # NMI =  0.0848243120365\n\n# k-means with RBF kernel ####\n\n    K <- 2  # number of cluster \n    centers <- data[1:K,]\n    \n    sigma <- 1/4.0\n\n    # Kclust <- specc(as.matrix(data) ,2, kernel=\"rbfdot\")\n    Kclust <- kkmeans(as.matrix(data), centers=2,\n                      kernel=\"rbfdot\", kpar=list(sigma=1/(2*4^2)))\n    SSE    <- sum(Kclust@withinss) \n\n    result <- data.frame(data, cluster=as.factor(Kclust@.Data))\n    ggplot(data=result, aes(x=x, y=y, color=cluster)) +\n        geom_point(size=3) + \n        geom_point(data=as.data.frame(Kclust@centers),\n                   aes(x=V1, y=V2, color='Center'), pch=17, size=7)\n    \n    res_Purity <- ClusterPurity(result$cluster, ground$cluster) \n    res_NMI    <- ClusterNMI(result$cluster, ground$cluster) \n    \n    cat(\"SSE = \",SSE,\"\\nPurity = \",res_Purity,\"\\nNMI = \",res_NMI)\n\n\n    # Expected result for kmeans RBF :\n    # of iterations: 3\n    # SSE =  2991.54279799\n    # Purity = 0.996666666667\n    # NMI =  0.968782533951\n    \n    f1 <- as.cl_hard_partition(unlist(Kclust))\n    f2 <- as.cl_hard_partition(ground$cluster)\n    cl_agreement(f1, f2, method=\"purity\")\n    cl_agreement(f1, f2, method=\"NMI\")\n\n\n# # plot with rcharts (to adapt)\n# \n# ##Run the K Means algorithm, remember to specify centers from 'elbow plot'\n# userMeans.log <- kmeans(kObject.log, centers=4, iter.max=10, nstart=100)\n# \n# ##Add the vector of specified clusters back to the original vector as a factor\n# kObject.log$cluster=factor(userMeans.log$cluster)\n# userNeighbors.df$cluster <- kObject.log$cluster\n# p2 <- nPlot(logFollowersCount ~ logFriendsCount, group = 'cluster', data = userNeighbors.df, type = 'scatterChart')\n# p2$xAxis(axisLabel = 'Followers Count')\n# p2$yAxis(axisLabel = 'Friends Count')\n# p2$chart(tooltipContent = \"#! function(key, x, y, e){\n#     \t\t\treturn e.point.screenName + ' Followers: ' + e.point.followersCount +' Friends: ' + e.point.friendsCount\n# \t\t\t\t} !#\")\n# p2\n\n\n\n\nn <- data.frame(t1=c(9,2), t2=c(1,8))\n\nTP <- sum(choose(unlist(n),2))\nFN <- sum(apply(n,2,function(x){choose(sum(x),2)}))  - TP\nFP <- sum(apply(n,1,function(x){choose(sum(x),2)}))  - TP\nTN <- choose(sum(unlist(n)),2) - (TP+FN+FP)\n\n",
    "created" : 1431866137150.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2052859865",
    "id" : "837E4988",
    "lastKnownWriteTime" : 1431867586,
    "path" : "C:/Users/Renaud_2/Dropbox/Coursera/Data Mining Specialization/01_Cluster Analysis in Data Mining/programming assignment/main_k_means.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}